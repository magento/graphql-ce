<?xml version="1.0" encoding="UTF-8"?>
<!--
 /**
  * Copyright Â© Magento, Inc. All rights reserved.
  * See COPYING.txt for license details.
  */
-->

<tests xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:noNamespaceSchemaLocation="urn:magento:mftf:Test/etc/testSchema.xsd">
    <test name="StorefrontConfigurableProductBasicInfoTest">
        <annotations>
            <features value="ConfigurableProduct"/>
            <stories value="View configurable product details in storefront"/>
            <title value="Guest customer should see basic Configurable Product details"/>
            <description value="Guest customer should see basic Configurable Product details"/>
            <severity value="MAJOR"/>
            <testCaseId value="MC-77"/>
            <group value="ConfigurableProduct"/>
        </annotations>

        <before>
            <createData entity="ApiCategory" stepKey="createCategory"/>
            <actionGroup ref="LoginAsAdmin" stepKey="loginAsAdmin"/>

            <!-- Create a configurable product via the UI -->
            <actionGroup ref="createConfigurableProduct" stepKey="createProduct">
                <argument name="product" value="_defaultProduct"/>
                <argument name="category" value="$$createCategory$$"/>
            </actionGroup>
        </before>
        <after>
            <deleteData createDataKey="createCategory" stepKey="deleteCategory"/>
            <amOnPage url="admin/admin/auth/logout/" stepKey="amOnLogoutPage"/>
        </after>

        <!-- Verify configurable product details in storefront product view -->
        <amOnPage url="{{_defaultProduct.urlKey}}.html" stepKey="amOnConfigurableProductPage"/>
        <waitForPageLoad stepKey="wait"/>
        <see userInput="{{_defaultProduct.name}}" selector="{{StorefrontProductInfoMainSection.productName}}" stepKey="seeProductName"/>
        <see userInput="{{_defaultProduct.sku}}" selector="{{StorefrontProductInfoMainSection.productSku}}" stepKey="seeProductSku"/>
        <see userInput="As low as" selector="{{StorefrontProductInfoMainSection.productPriceLabel}}" stepKey="seeProductPriceLabel"/>
        <see userInput="IN STOCK" selector="{{StorefrontProductInfoMainSection.productStockStatus}}" stepKey="seeProductStockStatus"/>
        <see userInput="1.00" selector="{{StorefrontProductInfoMainSection.productPrice}}" stepKey="seeProductPrice"/>
        <see userInput="{{colorProductAttribute.default_label}}" selector="{{StorefrontProductInfoMainSection.productAttributeTitle1}}" stepKey="seeProductAttributeTitle"/>
        <see selector="{{StorefrontProductInfoMainSection.productAttributeTitle1}}" userInput="{{colorProductAttribute.default_label}}" stepKey="seeColorAttributeName1"/>
        <see userInput="{{colorProductAttribute1.name}}" selector="{{StorefrontProductInfoMainSection.productAttributeOptions1}}" stepKey="seeInDropDown1"/>
        <see userInput="{{colorProductAttribute2.name}}" selector="{{StorefrontProductInfoMainSection.productAttributeOptions1}}" stepKey="seeInDropDown2"/>
        <see userInput="{{colorProductAttribute3.name}}" selector="{{StorefrontProductInfoMainSection.productAttributeOptions1}}" stepKey="seeInDropDown3"/>
    </test>

    <test name="StorefrontConfigurableProductOptionsTest">
        <annotations>
            <features value="ConfigurableProduct"/>
            <stories value="View configurable product details in storefront"/>
            <title value="Guest customer should be able to see product configuration options"/>
            <description value="Guest customer should be able to see product configuration options"/>
            <severity value="MAJOR"/>
            <testCaseId value="MC-92"/>
            <group value="ConfigurableProduct"/>
        </annotations>

        <before>
            <createData entity="ApiCategory" stepKey="createCategory"/>
            <actionGroup ref="LoginAsAdmin" stepKey="loginAsAdmin"/>

            <!-- Create a configurable product via the UI -->
            <actionGroup ref="createConfigurableProduct" stepKey="createProduct">
                <argument name="product" value="_defaultProduct"/>
                <argument name="category" value="$$createCategory$$"/>
            </actionGroup>
        </before>
        <after>
            <deleteData createDataKey="createCategory" stepKey="deleteCategory"/>
            <amOnPage url="admin/admin/auth/logout/" stepKey="amOnLogoutPage"/>
        </after>

        <!-- Verify configurable product options in storefront product view -->
        <amOnPage url="{{_defaultProduct.urlKey}}.html" stepKey="amOnConfigurableProductPage"/>
        <waitForPageLoad stepKey="wait"/>
        <see userInput="{{_defaultProduct.name}}" selector="{{StorefrontProductInfoMainSection.productName}}" stepKey="seeProductName"/>
        <selectOption userInput="{{colorProductAttribute1.name}}" selector="{{StorefrontProductInfoMainSection.productAttributeOptionsSelectButton}}" stepKey="selectOption1"/>
        <dontSee userInput="As low as" selector="{{StorefrontProductInfoMainSection.productPriceLabel}}" stepKey="dontSeeProductPriceLabel1"/>
        <see userInput="1.00" selector="{{StorefrontProductInfoMainSection.productPrice}}" stepKey="seeProductPrice1"/>
        <selectOption userInput="{{colorProductAttribute2.name}}" selector="{{StorefrontProductInfoMainSection.productAttributeOptionsSelectButton}}" stepKey="selectOption2"/>
        <dontSee userInput="As low as" selector="{{StorefrontProductInfoMainSection.productPriceLabel}}" stepKey="dontSeeProductPriceLabel2"/>
        <see userInput="2.00" selector="{{StorefrontProductInfoMainSection.productPrice}}" stepKey="seeProductPrice2"/>
        <selectOption userInput="{{colorProductAttribute3.name}}" selector="{{StorefrontProductInfoMainSection.productAttributeOptionsSelectButton}}" stepKey="selectOption3"/>
        <dontSee userInput="As low as" selector="{{StorefrontProductInfoMainSection.productPriceLabel}}" stepKey="dontSeeProductPriceLabel3"/>
        <see userInput="3.00" selector="{{StorefrontProductInfoMainSection.productPrice}}" stepKey="seeProductPrice3"/>
    </test>

    <test name="StorefrontConfigurableProductCanAddToCartTest">
        <annotations>
            <features value="ConfigurableProduct"/>
            <stories value="View configurable product details in storefront"/>
            <title value="Guest customer should be able to successfully add the product to the cart"/>
            <description value="Guest customer should be able to successfully add the product to the cart"/>
            <severity value="MAJOR"/>
            <testCaseId value="MC-97"/>
            <group value="ConfigurableProduct"/>
        </annotations>

        <before>
            <createData entity="ApiCategory" stepKey="createCategory"/>
            <actionGroup ref="LoginAsAdmin" stepKey="loginAsAdmin"/>

            <!-- Create a configurable product via the UI -->
            <actionGroup ref="createConfigurableProduct" stepKey="createProduct">
                <argument name="product" value="_defaultProduct"/>
                <argument name="category" value="$$createCategory$$"/>
            </actionGroup>
        </before>
        <after>
            <deleteData createDataKey="createCategory" stepKey="deleteCategory"/>
            <amOnPage url="admin/admin/auth/logout/" stepKey="amOnLogoutPage"/>
        </after>

        <!-- Verify adding configurable product to cart after an option is selected in storefront product view -->
        <amOnPage url="{{_defaultProduct.urlKey}}.html" stepKey="amOnConfigurableProductPage"/>
        <waitForPageLoad stepKey="wait"/>
        <see userInput="{{_defaultProduct.name}}" selector="{{StorefrontProductInfoMainSection.productName}}" stepKey="seeProductName"/>
        <selectOption userInput="{{colorProductAttribute1.name}}" selector="{{StorefrontProductInfoMainSection.productAttributeOptionsSelectButton}}" stepKey="selectOption1"/>
        <waitForElementVisible selector="{{StorefrontProductInfoMainSection.AddToCart}}" stepKey="waitForAddToCartVisible"/>
        <actionGroup ref="StorefrontAddProductToCartActionGroup" stepKey="addProductToCart">
            <argument name="product" value="_defaultProduct"/>
            <argument name="productCount" value="1"/>
        </actionGroup>
    </test>

    <test name="StorefrontConfigurableProductCantAddToCartTest">
        <annotations>
            <features value="ConfigurableProduct"/>
            <stories value="View configurable product details in storefront"/>
            <title value="Guest customer should not be able to add the product to the cart if options are not selected"/>
            <description value="Guest customer should not be able to add the product to the cart if options are not selected"/>
            <severity value="MAJOR"/>
            <testCaseId value="MC-81"/>
            <group value="ConfigurableProduct"/>
        </annotations>

        <before>
            <createData entity="ApiCategory" stepKey="createCategory"/>
            <actionGroup ref="LoginAsAdmin" stepKey="loginAsAdmin"/>

            <!-- Create a configurable product via the UI -->
            <actionGroup ref="createConfigurableProduct" stepKey="createProduct">
                <argument name="product" value="_defaultProduct"/>
                <argument name="category" value="$$createCategory$$"/>
            </actionGroup>
        </before>
        <after>
            <deleteData createDataKey="createCategory" stepKey="deleteCategory"/>
            <amOnPage url="admin/admin/auth/logout/" stepKey="amOnLogoutPage"/>
        </after>

        <!-- Verify not able to add configurable product to cart when no option is selected in storefront product view -->
        <amOnPage url="{{_defaultProduct.urlKey}}.html" stepKey="amOnConfigurableProductPage"/>
        <waitForPageLoad stepKey="wait"/>
        <see userInput="{{_defaultProduct.name}}" selector="{{StorefrontProductInfoMainSection.productName}}" stepKey="seeProductName"/>
        <waitForElementVisible selector="{{StorefrontProductInfoMainSection.AddToCart}}" stepKey="waitForAddToCartVisible"/>
        <click selector="{{StorefrontProductInfoMainSection.AddToCart}}" stepKey="clickAddToCart" />
        <see userInput="This is a required field" selector="{{StorefrontProductInfoMainSection.productAttributeOptionsError}}" stepKey="seeError"/>
    </test>
</tests>
